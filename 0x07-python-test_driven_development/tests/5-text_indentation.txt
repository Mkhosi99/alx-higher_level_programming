=====================================
Usage of module 5-text_indentation.py
=====================================

This module defines a text-indentation function named `text_indentation(text)`.

Use Case
========

Text is printed with two new lines after each of the characters ".", "?",
and ":".

e.g

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hi?")
    Hi?
    <BLANKLINE>

Spaces are not printed at the beginning of a line.

e.g

    >>> text_indentation("   Welcome.")
    Welcome.
    <BLANKLINE>

e.g

    >>> text_indentation("          ")

Similarly, no spaces are printed at the end of each printed line.

e.g

    >>> text_indentation("Hi.   ")
    Hi.
    <BLANKLINE>

e.g

    >>> text_indentation("    Testing.    Maybe it works.   ")
    Testing.
    <BLANKLINE>
    Maybe it works.
    <BLANKLINE>

New lines are only printed for the characters ".", "?", and ":".
Text not ending with these characters is not ended with a new line.

e.g

    >>> text_indentation("Will there be ending, perhaps")
    Will there be ending, perhaps

New lines within a string are printed as normal.

e.g

    >>> text_indentation("Printing a new-line! Here we go:\nPrinted.")
    Printing a new-line! Here we go:
    <BLANKLINE>
    <BLANKLINE>
    Printed.
    <BLANKLINE>

e.g

    >>> text_indentation("\n\n Just printed two new lines.")
    <BLANKLINE>
    <BLANKLINE>
    Just printed two new lines.
    <BLANKLINE>

e.g
    >>> text_indentation("Sneaking \n a new line.")
    Sneaking 
    a new line.
    <BLANKLINE>

Combination example:

e.g

    >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing "
    ... "elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas "
    ... "commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, "
    ... "sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri "
    ... "nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est "
    ... "moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde "
    ... "sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid "
    ... "voles, postea. Quae animi affectio suum cuique tribuens atque hanc, "
    ... "quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas "
    ... "videres") # doctest: +NORMALIZE_WHITESPACE
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, 
    quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Invalid Text
============

The paramter `text` must be a string. If not, a TypeError is raised.

e.g

    >>> text_indentation(5)
    Traceback (most recent call last):
    TypeError: text must be a string

e.g

    >>> text_indentation({"one": 1, "two": 2})
    Traceback (most recent call last):
    TypeError: text must be a string

e.g

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
